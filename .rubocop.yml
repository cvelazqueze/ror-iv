require:
  - rubocop-rspec
  - rubocop-performance
  - rubocop-rails

AllCops:
  NewCops: enable
  TargetRubyVersion: 2.6
  Exclude:
    - db/schema.rb
    - vendor/**/*
    - provisioning/**/*
    - bin/**/*
    - config/puma.rb
    - Guardfile
    - node_modules/**/*
    - frontend/**/*
    - lib/templates/rails/**/*
    - tmp/**/*

Rails:
  Enabled: true

Rails/HasAndBelongsToMany:
  Enabled: false

Lint/AmbiguousBlockAssociation:
  Enabled: false

Style/PercentLiteralDelimiters:
  Enabled: false

Style/SymbolArray:
  Enabled: false

Layout/ElseAlignment:
  Enabled: false

# Allow longer lines
Layout/LineLength:
  Max: 200

# Having a lot of code in a block is probably not a great thing.  But in specs,
# it's actually great, because spec frameworks like RSpec use blocks to define
# scopes of specs. It seems like specs are not what this rule was aimed at.
#
#     RSpec.describe User do
#       # All your specs go in here.
#     end
Metrics/BlockLength:
  Enabled: false

# Allow methods longer than 10 lines of code
Metrics/MethodLength:
  Max: 20

# Do not force classes/modules to have documentation
Style/Documentation:
  Enabled: false

# disable cop for indentation of if/end blocks
# ex:
# foo = if false
#   'bar'
# else
#   'baz'
# end
Layout/EndAlignment:
  Enabled: false

# disable cop for indentation of body of if blocks
# ex:
# foo = if false
#   'bar'
# else
#   'baz'
# end
Layout/IndentationWidth:
  Enabled: false

# disable cop for aligning indentation of case/when statements
# ex:
# foo = case user.bar
# when :value
#   :something
# else
#   :something_else
# end
Layout/CaseIndentation:
  Enabled: false

# Disable delegate cop due to bug in current rubocop release
# see https://github.com/bbatsov/rubocop/issues/1051
Rails/Delegate:
  Enabled: false

# This rule is difficult to reason about and doesn't consistently result in better code
Metrics/AbcSize:
  Enabled: false

# Enforce using either `%<token>s` or `%{token}`
Style/FormatStringToken:
  EnforcedStyle: template

Style/EmptyMethod:
  EnforcedStyle: expanded

RSpec/ExpectActual:
  Exclude:
    - 'spec/routing/**/*'
